"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[424],{3424:(e,t,i)=>{i.d(t,{A:()=>g});let s="KEYS",r="VALUES";class n{constructor(e,t){let i=e._tree,s=Array.from(i.keys());this.set=e,this._type=t,this._path=s.length>0?[{node:i,keys:s}]:[]}next(){let e=this.dive();return this.backtrack(),e}dive(){if(0===this._path.length)return{done:!0,value:void 0};let{node:e,keys:t}=o(this._path);if(""===o(t))return{done:!1,value:this.result()};let i=e.get(o(t));return this._path.push({node:i,keys:Array.from(i.keys())}),this.dive()}backtrack(){if(0===this._path.length)return;let e=o(this._path).keys;e.pop(),e.length>0||(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:e})=>o(e)).filter(e=>""!==e).join("")}value(){return o(this._path).node.get("")}result(){switch(this._type){case r:return this.value();case s:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}let o=e=>e[e.length-1],l=(e,t,i,s,r,n,o,h)=>{let u=n*o;e:for(let d of e.keys())if(""===d){let t=r[u-1];t<=i&&s.set(h,[e.get(d),t])}else{let u=n;for(let e=0;e<d.length;++e,++u){let s=d[e],n=o*u,l=n-o,h=r[n],a=Math.max(0,u-i-1),c=Math.min(o-1,u+i);for(let e=a;e<c;++e){let i=s!==t[e],o=r[l+e]+ +i,u=r[l+e+1]+1,d=r[n+e]+1,a=r[n+e+1]=Math.min(o,u,d);a<h&&(h=a)}if(h>i)continue e}l(e.get(d),t,i,s,r,u,o,h+d)}};class h{constructor(e=new Map,t=""){this._size=void 0,this._tree=e,this._prefix=t}atPrefix(e){if(!e.startsWith(this._prefix))throw Error("Mismatched prefix");let[t,i]=u(this._tree,e.slice(this._prefix.length));if(void 0===t){let[t,s]=_(i);for(let i of t.keys())if(""!==i&&i.startsWith(s)){let r=new Map;return r.set(i.slice(s.length),t.get(i)),new h(r,e)}}return new h(t,e)}clear(){this._size=void 0,this._tree.clear()}delete(e){return this._size=void 0,c(this._tree,e)}entries(){return new n(this,"ENTRIES")}forEach(e){for(let[t,i]of this)e(t,i,this)}fuzzyGet(e,t){return((e,t,i)=>{let s=new Map;if(void 0===t)return s;let r=t.length+1,n=r+i,o=new Uint8Array(n*r).fill(i+1);for(let e=0;e<r;++e)o[e]=e;for(let e=1;e<n;++e)o[e*r]=e;return l(e,t,i,s,o,1,r,""),s})(this._tree,e,t)}get(e){let t=d(this._tree,e);return void 0!==t?t.get(""):void 0}has(e){let t=d(this._tree,e);return void 0!==t&&t.has("")}keys(){return new n(this,s)}set(e,t){if("string"!=typeof e)throw Error("key must be a string");return this._size=void 0,a(this._tree,e).set("",t),this}get size(){if(this._size)return this._size;this._size=0;let e=this.entries();for(;!e.next().done;)this._size+=1;return this._size}update(e,t){if("string"!=typeof e)throw Error("key must be a string");this._size=void 0;let i=a(this._tree,e);return i.set("",t(i.get(""))),this}fetch(e,t){if("string"!=typeof e)throw Error("key must be a string");this._size=void 0;let i=a(this._tree,e),s=i.get("");return void 0===s&&i.set("",s=t()),s}values(){return new n(this,r)}[Symbol.iterator](){return this.entries()}static from(e){let t=new h;for(let[i,s]of e)t.set(i,s);return t}static fromObject(e){return h.from(Object.entries(e))}}let u=(e,t,i=[])=>{if(0===t.length||null==e)return[e,i];for(let s of e.keys())if(""!==s&&t.startsWith(s))return i.push([e,s]),u(e.get(s),t.slice(s.length),i);return i.push([e,t]),u(void 0,"",i)},d=(e,t)=>{if(0===t.length||null==e)return e;for(let i of e.keys())if(""!==i&&t.startsWith(i))return d(e.get(i),t.slice(i.length))},a=(e,t)=>{let i=t.length;t:for(let s=0;e&&s<i;){for(let r of e.keys())if(""!==r&&t[s]===r[0]){let n=Math.min(i-s,r.length),o=1;for(;o<n&&t[s+o]===r[o];)++o;let l=e.get(r);if(o===r.length)e=l;else{let i=new Map;i.set(r.slice(o),l),e.set(t.slice(s,s+o),i),e.delete(r),e=i}s+=o;continue t}let r=new Map;return e.set(t.slice(s),r),r}return e},c=(e,t)=>{let[i,s]=u(e,t);if(void 0!==i){if(i.delete(""),0===i.size)f(s);else if(1===i.size){let[e,t]=i.entries().next().value;m(s,e,t)}}},f=e=>{if(0===e.length)return;let[t,i]=_(e);if(t.delete(i),0===t.size)f(e.slice(0,-1));else if(1===t.size){let[i,s]=t.entries().next().value;""!==i&&m(e.slice(0,-1),i,s)}},m=(e,t,i)=>{if(0===e.length)return;let[s,r]=_(e);s.set(r+t,i),s.delete(r)},_=e=>e[e.length-1];class g{constructor(e){if((null==e?void 0:e.fields)==null)throw Error('MiniSearch: option "fields" must be provided');let t=null==e.autoVacuum||!0===e.autoVacuum?M:e.autoVacuum;this._options={...b,...e,autoVacuum:t,searchOptions:{...x,...e.searchOptions||{}},autoSuggestOptions:{...I,...e.autoSuggestOptions||{}}},this._index=new h,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=z,this.addFields(this._options.fields)}add(e){let{extractField:t,tokenize:i,processTerm:s,fields:r,idField:n}=this._options,o=t(e,n);if(null==o)throw Error(`MiniSearch: document does not have ID field "${n}"`);if(this._idToShortId.has(o))throw Error(`MiniSearch: duplicate ID ${o}`);let l=this.addDocumentId(o);for(let n of(this.saveStoredFields(l,e),r)){let r=t(e,n);if(null==r)continue;let o=i(r.toString(),n),h=this._fieldIds[n],u=new Set(o).size;for(let e of(this.addFieldLength(l,h,this._documentCount-1,u),o)){let t=s(e,n);if(Array.isArray(t))for(let e of t)this.addTerm(h,l,e);else t&&this.addTerm(h,l,t)}}}addAll(e){for(let t of e)this.add(t)}addAllAsync(e,t={}){let{chunkSize:i=10}=t,s={chunk:[],promise:Promise.resolve()},{chunk:r,promise:n}=e.reduce(({chunk:e,promise:t},s,r)=>(e.push(s),(r+1)%i==0)?{chunk:[],promise:t.then(()=>new Promise(e=>setTimeout(e,0))).then(()=>this.addAll(e))}:{chunk:e,promise:t},s);return n.then(()=>this.addAll(r))}remove(e){let{tokenize:t,processTerm:i,extractField:s,fields:r,idField:n}=this._options,o=s(e,n);if(null==o)throw Error(`MiniSearch: document does not have ID field "${n}"`);let l=this._idToShortId.get(o);if(null==l)throw Error(`MiniSearch: cannot remove document with ID ${o}: it is not in the index`);for(let n of r){let r=s(e,n);if(null==r)continue;let o=t(r.toString(),n),h=this._fieldIds[n],u=new Set(o).size;for(let e of(this.removeFieldLength(l,h,this._documentCount,u),o)){let t=i(e,n);if(Array.isArray(t))for(let e of t)this.removeTerm(h,l,e);else t&&this.removeTerm(h,l,t)}}this._storedFields.delete(l),this._documentIds.delete(l),this._idToShortId.delete(o),this._fieldLength.delete(l),this._documentCount-=1}removeAll(e){if(e)for(let t of e)this.remove(t);else if(arguments.length>0)throw Error("Expected documents to be present. Omit the argument to remove all documents.");else this._index=new h,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldLength=new Map,this._avgFieldLength=[],this._storedFields=new Map,this._nextId=0}discard(e){let t=this._idToShortId.get(e);if(null==t)throw Error(`MiniSearch: cannot discard document with ID ${e}: it is not in the index`);this._idToShortId.delete(e),this._documentIds.delete(t),this._storedFields.delete(t),(this._fieldLength.get(t)||[]).forEach((e,i)=>{this.removeFieldLength(t,i,this._documentCount,e)}),this._fieldLength.delete(t),this._documentCount-=1,this._dirtCount+=1,this.maybeAutoVacuum()}maybeAutoVacuum(){if(!1===this._options.autoVacuum)return;let{minDirtFactor:e,minDirtCount:t,batchSize:i,batchWait:s}=this._options.autoVacuum;this.conditionalVacuum({batchSize:i,batchWait:s},{minDirtCount:t,minDirtFactor:e})}discardAll(e){let t=this._options.autoVacuum;try{for(let t of(this._options.autoVacuum=!1,e))this.discard(t)}finally{this._options.autoVacuum=t}this.maybeAutoVacuum()}replace(e){let{idField:t,extractField:i}=this._options,s=i(e,t);this.discard(s),this.add(e)}vacuum(e={}){return this.conditionalVacuum(e)}conditionalVacuum(e,t){return this._currentVacuum?(this._enqueuedVacuumConditions=this._enqueuedVacuumConditions&&t,null!=this._enqueuedVacuum||(this._enqueuedVacuum=this._currentVacuum.then(()=>{let t=this._enqueuedVacuumConditions;return this._enqueuedVacuumConditions=z,this.performVacuuming(e,t)})),this._enqueuedVacuum):!1===this.vacuumConditionsMet(t)?Promise.resolve():(this._currentVacuum=this.performVacuuming(e),this._currentVacuum)}async performVacuuming(e,t){let i=this._dirtCount;if(this.vacuumConditionsMet(t)){let t=e.batchSize||S.batchSize,s=e.batchWait||S.batchWait,r=1;for(let[e,i]of this._index){for(let[e,t]of i)for(let[s]of t)this._documentIds.has(s)||(t.size<=1?i.delete(e):t.delete(s));0===this._index.get(e).size&&this._index.delete(e),r%t==0&&await new Promise(e=>setTimeout(e,s)),r+=1}this._dirtCount-=i}await null,this._currentVacuum=this._enqueuedVacuum,this._enqueuedVacuum=null}vacuumConditionsMet(e){if(null==e)return!0;let{minDirtCount:t,minDirtFactor:i}=e;return t=t||M.minDirtCount,i=i||M.minDirtFactor,this.dirtCount>=t&&this.dirtFactor>=i}get isVacuuming(){return null!=this._currentVacuum}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}has(e){return this._idToShortId.has(e)}getStoredFields(e){let t=this._idToShortId.get(e);if(null!=t)return this._storedFields.get(t)}search(e,t={}){let{searchOptions:i}=this._options,s={...i,...t},r=this.executeQuery(e,t),n=[];for(let[e,{score:t,terms:i,match:o}]of r){let r=i.length||1,l={id:this._documentIds.get(e),score:t*r,terms:Object.keys(o),queryTerms:i,match:o};Object.assign(l,this._storedFields.get(e)),(null==s.filter||s.filter(l))&&n.push(l)}return e===g.wildcard&&null==s.boostDocument||n.sort(F),n}autoSuggest(e,t={}){t={...this._options.autoSuggestOptions,...t};let i=new Map;for(let{score:s,terms:r}of this.search(e,t)){let e=r.join(" "),t=i.get(e);null!=t?(t.score+=s,t.count+=1):i.set(e,{score:s,terms:r,count:1})}let s=[];for(let[e,{score:t,terms:r,count:n}]of i)s.push({suggestion:e,terms:r,score:t/n});return s.sort(F),s}get documentCount(){return this._documentCount}get termCount(){return this._index.size}static loadJSON(e,t){if(null==t)throw Error("MiniSearch: loadJSON should be given the same options used when serializing the index");return this.loadJS(JSON.parse(e),t)}static async loadJSONAsync(e,t){if(null==t)throw Error("MiniSearch: loadJSON should be given the same options used when serializing the index");return this.loadJSAsync(JSON.parse(e),t)}static getDefault(e){if(b.hasOwnProperty(e))return p(b,e);throw Error(`MiniSearch: unknown option "${e}"`)}static loadJS(e,t){let{index:i,documentIds:s,fieldLength:r,storedFields:n,serializationVersion:o}=e,l=this.instantiateMiniSearch(e,t);for(let[e,t]of(l._documentIds=O(s),l._fieldLength=O(r),l._storedFields=O(n),l._documentIds))l._idToShortId.set(t,e);for(let[e,t]of i){let i=new Map;for(let e of Object.keys(t)){let s=t[e];1===o&&(s=s.ds),i.set(parseInt(e,10),O(s))}l._index.set(e,i)}return l}static async loadJSAsync(e,t){let{index:i,documentIds:s,fieldLength:r,storedFields:n,serializationVersion:o}=e,l=this.instantiateMiniSearch(e,t);for(let[e,t]of(l._documentIds=await L(s),l._fieldLength=await L(r),l._storedFields=await L(n),l._documentIds))l._idToShortId.set(t,e);let h=0;for(let[e,t]of i){let i=new Map;for(let e of Object.keys(t)){let s=t[e];1===o&&(s=s.ds),i.set(parseInt(e,10),await L(s))}++h%1e3==0&&await E(0),l._index.set(e,i)}return l}static instantiateMiniSearch(e,t){let{documentCount:i,nextId:s,fieldIds:r,averageFieldLength:n,dirtCount:o,serializationVersion:l}=e;if(1!==l&&2!==l)throw Error("MiniSearch: cannot deserialize an index created with an incompatible version");let u=new g(t);return u._documentCount=i,u._nextId=s,u._idToShortId=new Map,u._fieldIds=r,u._avgFieldLength=n,u._dirtCount=o||0,u._index=new h,u}executeQuery(e,t={}){if(e===g.wildcard)return this.executeWildcardQuery(t);if("string"!=typeof e){let i={...t,...e,queries:void 0},s=e.queries.map(e=>this.executeQuery(e,i));return this.combineResults(s,i.combineWith)}let{tokenize:i,processTerm:s,searchOptions:r}=this._options,n={tokenize:i,processTerm:s,...r,...t},{tokenize:o,processTerm:l}=n,h=o(e).flatMap(e=>l(e)).filter(e=>!!e).map(v(n)).map(e=>this.executeQuerySpec(e,n));return this.combineResults(h,n.combineWith)}executeQuerySpec(e,t){let i,s,r={...this._options.searchOptions,...t},n=(r.fields||this._options.fields).reduce((e,t)=>({...e,[t]:p(r.boost,t)||1}),{}),{boostDocument:o,weights:l,maxFuzzy:h,bm25:u}=r,{fuzzy:d,prefix:a}={...x.weights,...l},c=this._index.get(e.term),f=this.termResults(e.term,e.term,1,e.termBoost,c,n,o,u);if(e.prefix&&(i=this._index.atPrefix(e.term)),e.fuzzy){let t=!0===e.fuzzy?.2:e.fuzzy,i=t<1?Math.min(h,Math.round(e.term.length*t)):t;i&&(s=this._index.fuzzyGet(e.term,i))}if(i)for(let[t,r]of i){let i=t.length-e.term.length;if(!i)continue;null==s||s.delete(t);let l=a*t.length/(t.length+.3*i);this.termResults(e.term,t,l,e.termBoost,r,n,o,u,f)}if(s)for(let t of s.keys()){let[i,r]=s.get(t);if(!r)continue;let l=d*t.length/(t.length+r);this.termResults(e.term,t,l,e.termBoost,i,n,o,u,f)}return f}executeWildcardQuery(e){let t=new Map,i={...this._options.searchOptions,...e};for(let[e,s]of this._documentIds){let r=i.boostDocument?i.boostDocument(s,"",this._storedFields.get(e)):1;t.set(e,{score:r,terms:[],match:{}})}return t}combineResults(e,t="or"){if(0===e.length)return new Map;let i=w[t.toLowerCase()];if(!i)throw Error(`Invalid combination operator: ${t}`);return e.reduce(i)||new Map}toJSON(){let e=[];for(let[t,i]of this._index){let s={};for(let[e,t]of i)s[e]=Object.fromEntries(t);e.push([t,s])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:e,serializationVersion:2}}termResults(e,t,i,s,r,n,o,l,h=new Map){if(null==r)return h;for(let u of Object.keys(n)){let d=n[u],a=this._fieldIds[u],c=r.get(a);if(null==c)continue;let f=c.size,m=this._avgFieldLength[a];for(let r of c.keys()){if(!this._documentIds.has(r)){this.removeTerm(a,r,t),f-=1;continue}let n=o?o(this._documentIds.get(r),t,this._storedFields.get(r)):1;if(!n)continue;let _=c.get(r),g=this._fieldLength.get(r)[a],w=i*s*d*n*y(_,f,this._documentCount,g,m,l),v=h.get(r);if(v){v.score+=w,C(v.terms,e);let i=p(v.match,t);i?i.push(u):v.match[t]=[u]}else h.set(r,{score:w,terms:[e],match:{[t]:[u]}})}}return h}addTerm(e,t,i){let s=this._index.fetch(i,V),r=s.get(e);if(null==r)(r=new Map).set(t,1),s.set(e,r);else{let e=r.get(t);r.set(t,(e||0)+1)}}removeTerm(e,t,i){if(!this._index.has(i))return void this.warnDocumentChanged(t,e,i);let s=this._index.fetch(i,V),r=s.get(e);null==r||null==r.get(t)?this.warnDocumentChanged(t,e,i):1>=r.get(t)?r.size<=1?s.delete(e):r.delete(t):r.set(t,r.get(t)-1),0===this._index.get(i).size&&this._index.delete(i)}warnDocumentChanged(e,t,i){for(let s of Object.keys(this._fieldIds))if(this._fieldIds[s]===t)return void this._options.logger("warn",`MiniSearch: document with ID ${this._documentIds.get(e)} has changed before removal: term "${i}" was not present in field "${s}". Removing a document after it has changed can corrupt the index!`,"version_conflict")}addDocumentId(e){let t=this._nextId;return this._idToShortId.set(e,t),this._documentIds.set(t,e),this._documentCount+=1,this._nextId+=1,t}addFields(e){for(let t=0;t<e.length;t++)this._fieldIds[e[t]]=t}addFieldLength(e,t,i,s){let r=this._fieldLength.get(e);null==r&&this._fieldLength.set(e,r=[]),r[t]=s;let n=this._avgFieldLength[t]||0;this._avgFieldLength[t]=(n*i+s)/(i+1)}removeFieldLength(e,t,i,s){if(1===i){this._avgFieldLength[t]=0;return}let r=this._avgFieldLength[t]*i-s;this._avgFieldLength[t]=r/(i-1)}saveStoredFields(e,t){let{storeFields:i,extractField:s}=this._options;if(null==i||0===i.length)return;let r=this._storedFields.get(e);for(let n of(null==r&&this._storedFields.set(e,r={}),i)){let e=s(t,n);void 0!==e&&(r[n]=e)}}}g.wildcard=Symbol("*");let p=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,w={or:(e,t)=>{for(let i of t.keys()){let s=e.get(i);if(null==s)e.set(i,t.get(i));else{let{score:e,terms:r,match:n}=t.get(i);s.score=s.score+e,s.match=Object.assign(s.match,n),k(s.terms,r)}}return e},and:(e,t)=>{let i=new Map;for(let s of t.keys()){let r=e.get(s);if(null==r)continue;let{score:n,terms:o,match:l}=t.get(s);k(r.terms,o),i.set(s,{score:r.score+n,terms:r.terms,match:Object.assign(r.match,l)})}return i},and_not:(e,t)=>{for(let i of t.keys())e.delete(i);return e}},y=(e,t,i,s,r,n)=>{let{k:o,b:l,d:h}=n;return Math.log(1+(i-t+.5)/(t+.5))*(h+e*(o+1)/(e+o*(1-l+l*s/r)))},v=e=>(t,i,s)=>{let r="function"==typeof e.fuzzy?e.fuzzy(t,i,s):e.fuzzy||!1,n="function"==typeof e.prefix?e.prefix(t,i,s):!0===e.prefix,o="function"==typeof e.boostTerm?e.boostTerm(t,i,s):1;return{term:t,fuzzy:r,prefix:n,termBoost:o}},b={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(T),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{"function"==typeof(null==console?void 0:console[e])&&console[e](t)},autoVacuum:!0},x={combineWith:"or",prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:{k:1.2,b:.7,d:.5}},I={combineWith:"and",prefix:(e,t,i)=>t===i.length-1},S={batchSize:1e3,batchWait:10},z={minDirtFactor:.1,minDirtCount:20},M={...S,...z},C=(e,t)=>{e.includes(t)||e.push(t)},k=(e,t)=>{for(let i of t)e.includes(i)||e.push(i)},F=({score:e},{score:t})=>t-e,V=()=>new Map,O=e=>{let t=new Map;for(let i of Object.keys(e))t.set(parseInt(i,10),e[i]);return t},L=async e=>{let t=new Map,i=0;for(let s of Object.keys(e))t.set(parseInt(s,10),e[s]),++i%1e3==0&&await E(0);return t},E=e=>new Promise(t=>setTimeout(t,e)),T=/[\n\r\p{Z}\p{P}]+/u}}]);